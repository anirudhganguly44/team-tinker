{"version":3,"sources":["components/Navigation.jsx","components/Footer.jsx","components/DisplayDataSets.jsx","components/Home.jsx","components/About.jsx","components/Contact.jsx","components/DisplayImages.jsx","components/UploadImage.jsx","App.js","reportWebVitals.js","index.js"],"names":["withRouter","props","className","class","to","location","pathname","Footer","GetDataSets","state","data","fetch","then","res","json","setState","express","dataset","console","log","requestOptions","method","headers","body","JSON","stringify","Dataset","dirPath","dirName","directoryName","response","blob","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","appendChild","click","parentNode","removeChild","datasetList","this","map","style","name","status","width","type","onClick","OnDownload","path","value","OnClean","disabled","React","Component","Home","DisplayDataSets","About","src","alt","Contact","DisplayImages","checkFilter","evt","filter","target","checked","forceUpdate","checkSelectFilter","filter_label","TotalImages","TotalLabels","TotalCorrections","loaded","params","queryString","parse","search","label_count","getTrueLabels","length","getCorrectedImageCount","datas","count","forEach","label","trueLabel","trueLabels","results","imageSet","tlabel","includes","push","dict","file","imagePath","split","fileSrc","newLabel","requestBody","axios","post","onUploadProgress","ProgressEvent","total","toast","success","catch","err","error","delete","imageList","trueLabelsList","defaultChecked","onChange","id","selected","truelabeloption","canShowImage","height","options","e","renameSubmit","deleteImage","doDownload","UploadImage","checkMimeType","event","files","types","x","every","z","maxSelectFile","warn","checkFileSize","size","onChangeHandler","selectedFile","onClickHandler","FormData","append","multiple","Progress","max","color","Math","round","App","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a37554d4.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport \"../App.css\";\n\n\nfunction Navigation(props) {\n  return (\n    <div className=\"navigation\">\n      <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n        <div class=\"container\">\n          <Link class=\"navbar-brand\" to=\"/\">\n          Automatic Label Correction\n          </Link>\n          <div>\n            <ul class=\"navbar-nav ml-auto\">\n              <li\n                class={`nav-item  ${\n                  props.location.pathname === \"/\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link class=\"nav-link\" to=\"/\">\n                  Home\n                  <span class=\"sr-only\">(current)</span>\n                </Link>\n              </li>\n              <li\n                class={`nav-item  ${\n                  props.location.pathname === \"/about\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link class=\"nav-link\" to=\"/about\">\n                  About\n                </Link>\n              </li>\n              <li\n                class={`nav-item  ${\n                  props.location.pathname === \"/contact\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link class=\"nav-link\" to=\"/contact\">\n                  Contact\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default withRouter(Navigation);\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <div>\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n\n      <div className=\"footer\">\n        <footer class=\"py-5 bg-dark fixed-bottom\">\n          <div class=\"container\">\n            <p class=\"m-0 text-center text-white\">\n              Copyright &copy; 2021\n            </p>\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n// import { Link } from 'react-router-dom';\n// import { DownloadUtil } from '../utils/downloadutil';\n\nclass GetDataSets extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { data: [] };\n  }\n\n  componentDidMount() {\n    fetch(\"/getdatasets?dir=./client/public/selfie-output\")\n      .then((res) => res.json())\n      .then((json) => this.setState({ data: json.express }));\n  }\n\n  OnClean(dataset) {\n    console.log(\"Cleaning\")\n    const requestOptions = {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ Dataset: dataset })\n    };\n\n    fetch('/train', requestOptions)\n  }\n\n  OnDownload(dirPath, dirName) {\n    console.log(\"Downloading dataset\");\n    // DownloadUtil(dirPath, dirName);\n\n    var directoryName = dirName + \".zip\";\n    fetch('/download?dir=' + dirPath, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/octet-stream',\n      },\n    })\n      .then((response) => response.blob())\n      .then((blob) => {\n        // Create blob link to download\n        const url = window.URL.createObjectURL(\n          new Blob([blob]),\n        );\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute(\n          'download',\n          directoryName,\n        );\n\n        // Append to html link element page\n        document.body.appendChild(link);\n\n        // Start download\n        link.click();\n\n        // Clean up and remove the link\n        link.parentNode.removeChild(link);\n      });\n\n\n  }\n\n  render() {\n    const datasetList = this.state.data;\n    // console.log(datasetList);\n    // console.log('Current directory: ' + process.cwd());\n    return (\n\n      <div className=\"wrapper\">\n        <table className=\"table blueTable\">\n          <thead>\n            <tr>\n              <th>Dataset</th>\n              <th>Status</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              datasetList.map((dataset) => (\n                <tr>\n                  <td>\n                      {/* <Link\n                        to={{\n                          pathname: '/displayimages?name=' + dataset.name\n                        }}\n                      >{dataset.name}\n                      </Link> */}\n                      <div style={{ 'text-transform': 'uppercase' }}>\n                      <a className=\"hyperlink\" href={\"/displayimages?name=\" + dataset.name}> <div>{dataset.name}</div> </a>\n                      </div>\n                  </td>\n                  <td style={{ 'text-transform': 'uppercase' }}>{dataset.status}\n                  </td>\n                  <td width=\"auto\">\n                    {dataset.status === \"clean\" &&\n                      <input type=\"button\" class=\"myButton1\" onClick={() => this.OnDownload(dataset.path, dataset.name)} value=\"Download\" />\n                    }\n                    {dataset.status === \"clean\" &&\n                      <input type=\"button\" class=\"myButton1\" onClick={() => this.OnClean(dataset.name)} value=\"Clean\" disabled />\n                    }\n                    {dataset.status === \"unclean\" &&\n                      <input type=\"button\" class=\"myButton1\" onClick={() => this.OnDownload(dataset.path, dataset.name)} value=\"Download\" disabled />\n                    }\n                    {dataset.status === \"unclean\" &&\n                      <input type=\"button\" class=\"myButton1\" onClick={() => this.OnClean(dataset.name)} value=\"Clean\" />\n                    }\n                  </td>\n                </tr>\n              ))\n            }\n          </tbody>\n        </table>\n        <a type=\"button\" class=\"myButton2\" href=\"./uploadimage\">Upload</a>\n        <br/>\n        <a type=\"button\" class=\"myButton2\" href=\"./createimage\">Create</a>\n      </div>\n    );\n  }\n}\n\nexport default GetDataSets;\n","import React from \"react\";\nimport  DisplayDataSets from \"./DisplayDataSets\";\n// import UploadImages from \"./UploadImages\";\n// import UploadImage from \"./UploadImage\";\n\n\n\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <div class=\"container\">\n        <div class=\"row align-items-center my-5\">\n          <div class=\"col-lg-5\">\n            {/* <h1 class=\"font-weight-light\">Upload Images</h1> */}\n              <ul>\n                {/* <UploadImages/> */}\n                {/* <UploadImage/> */}\n                <DisplayDataSets/>\n              </ul>\n            <div>\n              {/* <a href=\"./viewloadimages\">View the loaded images</a> */}\n              <br></br>\n              <br></br>\n              {/* <a href=\"./displaydatasets\">Click here to get datasets</a> */}\n              {/* <a type=\"button\" class=\"btn btn-success btn-block\" href=\"./uploadimage\"> Upload Image</a> */}\n            </div >\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\n\nfunction About() {\n  return (\n    <div className=\"about\">\n      <div class=\"container\">\n        <div class=\"row align-items-center my-5\">\n          <div class=\"col-lg-7\">\n            <img\n              class=\"img-fluid rounded mb-4 mb-lg-0\"\n              src=\"http://placehold.it/900x400\"\n              alt=\"\"\n            />\n          </div>\n          <div class=\"col-lg-5\">\n            <h1 class=\"font-weight-light\">About</h1>\n            <div>\n              <a href=\"/contact\">Click here to go to Contact</a>\n            </div >\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default About;","import React from \"react\";\n\nfunction Contact() {\n  return (\n    <div className=\"contact\">\n      <div class=\"container\">\n        <div class=\"row align-items-center my-5\">\n          <div class=\"col-lg-7\">\n            <img\n              class=\"img-fluid rounded mb-4 mb-lg-0\"\n              src=\"http://placehold.it/900x400\"\n              alt=\"\"\n            />\n          </div>\n          <div class=\"col-lg-5\">\n            <h1 class=\"font-weight-light\">Contact</h1>\n            <p>\n              This is Contact us page.\n              <br />\n              <br />\n              <br />\n              <br />\n              <br />\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport {Progress} from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass DisplayImages extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n      filter: false,\n      filter_label: \"default\",\n      TotalImages: 0,\n      TotalLabels: 0,\n      TotalCorrections: 0,\n      loaded:0\n    };\n  }\n\n  componentDidMount() {\n\n    let params = queryString.parse(this.props.location.search)\n    fetch(\"/getimages?dir=./client/public/selfie-output/\" + params.name)\n      .then((res) => res.json())\n      .then((json) => {\n        var label_count = this.getTrueLabels(json.express).length\n        this.setState({ data: json.express, TotalLabels: label_count, TotalImages: json.express.length, TotalCorrections: this.getCorrectedImageCount(json.express) });\n\n      });\n  }\n\n  getCorrectedImageCount(datas) {\n    var count = 0;\n    datas.forEach(data => {\n      if (data.label !== data.trueLabel)\n        count = count + 1;\n    });\n\n    return count;\n  }\n\n  checkFilter = (evt) => {\n    console.log(\"Hello\");\n    this.setState({ filter: evt.target.checked })\n\n    this.forceUpdate();\n  }\n\n  checkSelectFilter = (evt) => {\n    console.log(\"Hello\");\n    this.setState({ filter_label: evt.target.value })\n\n    this.forceUpdate();\n  }\n\n  getTrueLabels(dataset) {\n    console.log(\"In finding true labels!\");\n    var trueLabels = [];\n    var results = [];\n    dataset.forEach(imageSet => {\n      const tlabel = imageSet.trueLabel;\n      if (!(trueLabels.includes(tlabel))) {\n        trueLabels.push(tlabel);\n      }\n    });\n    console.log(\"True labels: \" + trueLabels);\n\n    trueLabels.forEach(label => {\n      const dict = {};\n      dict[\"value\"] = label;\n      dict[\"label\"] = label;\n      results.push(dict);\n    });\n\n    return results;\n\n  }\n\n\n  canShowImage(file) {\n    if (this.state.filter === false) {\n      if (this.state.filter_label === \"default\")\n        return true;\n      if (file.trueLabel === this.state.filter_label)\n        return true;\n    }\n    else {\n      if (file.label === file.trueLabel)\n        return false;\n      if (this.state.filter_label === \"default\")\n        return true;\n      if (file.trueLabel === this.state.filter_label)\n        return true;\n    }\n\n    return false;\n\n  }\n\n  doDownload(imagePath) {\n    console.log(\"Downloading dataset\");\n\n    var split1 = imagePath[0].src.split(/(.*)[\\/\\\\]/)[1];\n    // console.log(\"download path folder: \"+folderName);\n    var split2 = split1.split(/(.*)[\\/\\\\]/)[1];\n    // console.log(\"Next slit path folder: \"+splitAgain);\n    var dirPath = split2.split(/(.*)[\\/\\\\]/)[1];\n    console.log(\"downloadPath: \" + dirPath);\n    var dirName = dirPath.split(/(.*)[\\/\\\\]/)[2];\n    console.log(\"downloadName: \" + dirName);\n\n    var directoryName = dirName + \".zip\";\n    fetch('/download?dir=' + dirPath, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/octet-stream',\n      },\n    })\n      .then((response) => response.blob())\n      .then((blob) => {\n        // Create blob link to download\n        const url = window.URL.createObjectURL(\n          new Blob([blob]),\n        );\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute(\n          'download',\n          directoryName,\n        );\n\n        // Append to html link element page\n        document.body.appendChild(link);\n\n        // Start download\n        link.click();\n\n        // Clean up and remove the link\n        link.parentNode.removeChild(link);\n      });\n\n  }\n\n\n  renameSubmit(fileSrc, newLabel) {\n    // document.getElementById(\"renamebtn\").disabled = true;\n    // this.state.nameSelected = false;\n    console.log(\"In rename Submit group.\");\n\n    var requestBody = {\n      \"filesrc\": fileSrc,\n      \"newtruelabel\":newLabel\n    };\n\n    axios.post(\"http://localhost:3001/imagerename\", requestBody, {\n        onUploadProgress: ProgressEvent => {\n        this.setState({\n            loaded: (ProgressEvent.loaded / ProgressEvent.total*100),\n        })\n        },\n    })\n    .then(res => { // then print response status\n        toast.success('rename success')\n    })\n    .catch(err => { // then print response status\n        toast.error('rename fail')\n    })\n  }\n\n  deleteImage(fileSrc) {\n    console.log(\"In image delete section.\");\n\n    axios.delete(\"http://localhost:3001/deletefile?file=\"+fileSrc, {\n        onUploadProgress: ProgressEvent => {\n        this.setState({\n            loaded: (ProgressEvent.loaded / ProgressEvent.total*100),\n        })\n        },\n    })\n    .then(res => { // then print response status\n        toast.success('Operation complete!')\n    })\n    .catch(err => { // then print response status\n        toast.error('Operation failed!')\n    })\n\n  }\n\n  render() {\n    const imageList = this.state.data;\n    console.log(imageList);\n    const trueLabelsList = this.getTrueLabels(imageList);\n    // console.log(\"After get true labels: \" + trueLabelsList);\n\n    return (\n      <div>\n        <div className=\"stats\">\n          <label>Total Image Count: {this.state.TotalImages}</label><br />\n          <label>Total Label Count: {this.state.TotalLabels}</label><br />\n          <label>Total Corrected Image Count: {this.state.TotalCorrections}</label>\n        </div>\n        <div class=\"wrapper\">\n          <div class=\"box\">\n            <label>\n              <input type=\"checkbox\" defaultChecked={this.state.filter} onChange={this.checkFilter} id=\"filter\" />\n              Filter Only Corrected Images\n            </label>\n          </div>\n          <div class=\"box\"> Filter By Label</div>\n          <div class=\"box\">\n            <select id=\"label_filter\" onChange={this.checkSelectFilter}>\n              <option value=\"default\" selected>All</option>\n              {trueLabelsList.map((truelabeloption) => (\n                <option value={truelabeloption.value}>{truelabeloption.label}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <div className=\"home\">\n          <div class=\"parent\">\n            {imageList.map((file) => (\n              this.canShowImage(file) &&\n              <div class=\"child\">\n                <img src={file.src} alt=\"\" />\n                <br />\n                Original Label = {file.label}\n                <br />\n                Corrected Label = {file.trueLabel}\n                <br />\n                <svg width=\"100%\" height=\"1\">\n                  <rect width=\"100%\" height=\"1\" />\n                </svg>\n                <br />\n                <div>\n                  <Select options={trueLabelsList} onChange={(e) => this.renameSubmit(file.src, e.value)} /><br/>\n                  <input type=\"button\" class=\"myButton1\" value=\"Delete\" id={file.src} onClick={this.deleteImage}/>\n                </div>\n              </div>\n            ))}\n\n          </div>\n          <input type=\"button\" class=\"myButton1\" value=\"Download\" id=\"DownloadDataset\" onClick={this.doDownload}/>\n        </div>\n      </div>\n    );\n\n\n  }\n}\n\n//export default DisplayImages;\nexport default withRouter(DisplayImages);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Progress} from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass UploadImage extends Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n        selectedFile: null,\n        loaded:0\n      }\n   \n  }\ncheckMimeType=(event)=> {\n    //getting file object\n    let files = event.target.files \n    //define message container\n    let err = []\n    // list allow mime type\n    const types = ['image/png', 'image/jpeg', 'image/gif', 'application/zip']\n    // loop access array\n    for(var x = 0; x<files.length; x++) {\n        // compare file type find doesn't matach\n            if (types.every(type => files[x].type !== type)) {\n            // create error message and assign to container   \n            err[x] = files[x].type+' is not a supported format\\n';\n        }\n     }\n     for(var z = 0; z < err.length; z++) {// if message not same old that mean has error \n         // discard selected file\n        toast.error(err[z])\n        event.target.value = null\n    }\n    return true;\n}\nmaxSelectFile=(event)=>{\n    let files = event.target.files\n        if (files.length > 4) { \n           const msg = 'Only 4 images can be uploaded at a time'\n           event.target.value = null\n           toast.warn(msg)\n           return false;\n    }\n    return true;\n}\ncheckFileSize=(event)=>{\n    let files = event.target.files\n    let size = 2000000000 \n    let err = []; \n    for(var x = 0; x<files.length; x++) {\n    if (files[x].size > size) {\n    err[x] = files[x].type+'is too large, please pick a smaller file\\n';\n    }\n}\n    for(var z = 0; z<err.length; z++) {// if message not same old that mean has error \n  // discard selected file\n toast.error(err[z])\n event.target.value = null\n}\nreturn true;\n}\nonChangeHandler=event=>{\n  var files = event.target.files\n  if(this.maxSelectFile(event) && this.checkMimeType(event) &&    this.checkFileSize(event)){ \n  // if return true allow to setState\n     this.setState({\n     selectedFile: files,\n     loaded:0\n  })\n}\n}\n\nonClickHandler = () => {\n    const data = new FormData() \n    for(var x = 0; x<this.state.selectedFile.length; x++) {\n        data.append('file', this.state.selectedFile[x])\n    }\n    axios.post(\"http://localhost:3001/upload\", data, {\n        onUploadProgress: ProgressEvent => {\n        this.setState({\n            loaded: (ProgressEvent.loaded / ProgressEvent.total*100),\n        })\n        },\n    })\n    .then(res => { // then print response status\n        toast.success('upload success')\n    })\n    .catch(err => { // then print response status\n        toast.error('upload fail')\n    })\n}\n\nrender() {\nreturn (\n    <div class=\"container\">\n        <div class=\"row\">\n        <div class=\"offset-md-2 col-md-8\">\n            <div class=\"form-group files\">\n            <br/><br/><br/>\n            <h4>Upload Your File </h4>\n            <input type=\"file\" class=\"form-control\" multiple onChange={this.onChangeHandler}/>\n            </div>  \n\n            <div class=\"form-group\">\n            <ToastContainer />\n            <Progress max=\"100\" color=\"success\" value={this.state.loaded} >{Math.round(this.state.loaded,2) }%</Progress>\n            </div>             \n            <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Upload</button>\n            <br/>\n            <a type=\"button\" class=\"btn btn-outline-secondary\" href=\"./\">View the Datasets</a>\n        </div>\n    </div>\n    </div>\n    );}\n}\n\nexport default UploadImage;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Navigation, Home, About, Contact, DisplayDataSets, DisplayImages } from \"./components\";\nimport UploadImage from \"./components/UploadImage\";\n\nfunction App() {\n    return (\n        <div className=\"App\"> \n        <Router>\n        <Navigation />\n        <Switch>\n            <Route path = \"/\" exact component = {() => < Home / > }/> \n            <Route path = \"/about\" exact component = {() => < About / > }/> \n            <Route path = \"/contact\" exact component = { () => < Contact / >}/> \n            {/* <Route path = \"/displaydatasets\" exact component = { () => < DisplayDataSets / > }/>  */}\n            <Route path = \"/displayimages\" exact component = { () => < DisplayImages / > }/> \n            <Route path = \"/uploadimage\" exact component = { () => < UploadImage / > }/> \n        </Switch> \n        </Router> \n        </div> \n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render( <\n    React.StrictMode >\n    <\n    App / >\n    <\n    /React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}